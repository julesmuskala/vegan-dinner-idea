{"version":3,"sources":["assets/leaves-logo.svg","components/TapButton.js","assets/load-logo.svg","components/GivenIdea.js","components/AboutPage.js","Ideas.js","index.js"],"names":["TapButton","textContent","status","func","className","onClick","src","logo","alt","GivenIdea","name","image","link","loadFunc","loadStatus","source","match","replaceAll","loadStatusClass","loadLogo","href","target","rel","onLoad","AboutPage","to","Ideas","useState","ideaStatus","setIdeaStatus","ideaData","setIdeaData","loading","setLoading","usedIdeas","exact","path","event","setTimeout","rand","Math","floor","random","data","length","includes","selectedItem","push","ReactDOM","render","document","getElementById"],"mappings":"683QAAe,G,MAAA,IAA0B,yC,OCsB1BA,EApBG,SAAC,GAAoB,IAEjCC,EAFcC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAS1B,MALe,UAAXD,EACFD,EAAc,8BAAG,yCAAH,qCACM,YAAXC,IACTD,EAAc,wCAAU,+CAGxB,yBACEG,UAAS,gCAA2BF,GACpCG,QAASF,EAFX,UAIGF,EACD,qBAAKK,IAAKC,EAAMC,IAAI,aCjBX,MAA0B,sCCiC1BC,EA/BG,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMV,EAAmC,EAAnCA,OAAQW,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAGpDC,EAASH,EAAKI,MADM,yBACmB,GAC3CD,EAASA,EAAOE,WAAW,eAAgB,IAE3C,IAAIC,EAAkBJ,EAAa,UAAY,UAE/C,OACE,qCACE,sBAAKV,UAAS,kDAA6Cc,GAA3D,UACE,wBACA,qBAAKZ,IAAKa,EAAUX,IAAI,QAE1B,oBACEJ,UAAS,gCAA2BF,GACpCkB,KAAMR,EACNS,OAAO,SACPC,IAAI,aAJN,UAKE,6BAAKZ,IACL,qBACEJ,IAAKK,EACLH,IAAI,GACJe,OAAQV,IAEV,mBAAGT,UAAU,YAAb,kCAA4CW,YCFrCS,EAvBG,kBAChB,qCACE,uBAAMpB,UAAU,8BAAhB,UACE,oBAAGA,UAAU,mBAAb,mEACwD,mBACpDA,UAAU,YACVgB,KAAK,mDACLC,OAAO,SACPC,IAAI,aAJgD,2BAOxD,mBAAGlB,UAAU,6BAAb,SACE,eAAC,IAAD,CAAMqB,GAAG,IAAT,qBAAqB,sDAGzB,wBAAQrB,UAAU,eAAlB,SACE,iG,QC+DSsB,EAlED,WAEZ,MAAoCC,mBAAS,SAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,CACvCjB,KAAM,UACNC,MAAO,GACPC,KAAM,4BAHR,mBAAOkB,EAAP,KAAiBC,EAAjB,KAKA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEIC,EAAY,GA2BhB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACE,uBAAMhC,UAAU,8BAAhB,UACE,cAAC,EAAD,CACEM,KAAMoB,EAASpB,KACfC,MAAOmB,EAASnB,MAChBC,KAAMkB,EAASlB,KACfV,OAAQ0B,EACRf,SAdU,SAACwB,GACrBJ,GAAW,IAcDnB,WAAYkB,IACd,cAAC,EAAD,CACE9B,OAAQ0B,EACRzB,KAvCY,SAACkC,GACvBJ,GAAW,GACXK,YAAW,WACU,UAAfV,GACFC,EAAc,WAGhB,IADA,IAAIU,EAAOC,KAAKC,MAAMD,KAAKE,SAAWC,EAAKC,QACpCV,EAAUW,SAASN,IACxBA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWC,EAAKC,QAEzC,IAAME,EAAeH,EAAKJ,GAC1BL,EAAUa,KAAKR,GACfR,EAAY,CACVrB,KAAMoC,EAAY,KAClBnC,MAAOmC,EAAY,MACnBlC,KAAMkC,EAAY,SAEnB,YAyBG,wBAAQ1C,UAAU,eAAlB,SACE,cAAC,IAAD,CAAMqB,GAAG,SAAT,wBAGJ,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,YCpEVY,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.374b064a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/leaves-logo.2cc42208.svg\";","import logo from '../assets/leaves-logo.svg'\n\nconst TapButton = ({status, func}) => {\n  \n  let textContent\n\n  if (status === 'start') {\n    textContent = <p><strong>Tap</strong> to get your vegan dinner idea!</p>\n  } else if (status === 'display') {\n    textContent = <p>or try <strong>again</strong></p>\n  }\n  return (\n    <button\n      className={`tap-button tap-button-${status}`}\n      onClick={func}\n    >\n      {textContent}\n      <img src={logo} alt=\"logo\" />\n    </button>\n  )\n}\n\nexport default TapButton","export default __webpack_public_path__ + \"static/media/load-logo.e4f76932.svg\";","import loadLogo from '../assets/load-logo.svg'\n\nconst GivenIdea = ({ name, image, link, status, loadFunc, loadStatus }) => {\n\n  let sourceAssignRegex = /https:\\/\\/www\\.[a-z]+/\n  let source = link.match(sourceAssignRegex)[0]\n  source = source.replaceAll('https://www.', '')\n\n  let loadStatusClass = loadStatus ? 'pending' : 'success'\n\n  return (\n    <>\n      <div className={`given-idea__blocker given-idea__blocker-${loadStatusClass}`}>\n        <div />\n        <img src={loadLogo} alt=\"\" />\n      </div>\n      <a\n        className={`given-idea given-idea-${status}`}\n        href={link}\n        target=\"_blank\"\n        rel=\"noreferrer\">\n        <h2>{name}</h2>\n        <img\n          src={image}\n          alt=\"\"\n          onLoad={loadFunc}\n        />\n        <p className=\"idea-link\">{`View recipe by ${source}`}</p>\n      </a>\n    </>\n  )\n}\n\nexport default GivenIdea","import { Link } from 'react-router-dom'\n\nconst AboutPage = () => (\n  <>\n    <main className=\"ideas-main ideas-main-about\">\n      <p className=\"about-page__text\">\n        This is just a fun open-souce project you can find on <a\n          className=\"line-link\"\n          href=\"https://github.com/breakingbar/vegan-dinner-idea\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          >my GitHub.</a>\n      </p>\n      <p className=\"about-page__text line-link\">\n        <Link to=\"/\">back to <strong>tapping!</strong></Link>\n      </p>\n    </main>\n    <footer className=\"ideas-footer\">\n      <p>\n        All recipes and pictures belong to their respective users.\n      </p>\n    </footer>\n  </>\n)\n\nexport default AboutPage","import { useState } from 'react'\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport './assets/stylesheet.css'\nimport TapButton from './components/TapButton'\nimport GivenIdea from './components/GivenIdea'\nimport AboutPage from './components/AboutPage'\nimport data from './data/data.json'\n\nconst Ideas = () => {\n\n  const [ideaStatus, setIdeaStatus] = useState('start')\n  const [ideaData, setIdeaData] = useState({\n    name: 'example',\n    image: '',\n    link: 'https://www.example.com'\n  })\n  const [loading, setLoading] = useState(false)\n\n  let usedIdeas = []\n\n  const handleTapButton = (event) => {\n    setLoading(true)\n    setTimeout(() => {\n      if (ideaStatus === 'start') {\n        setIdeaStatus('display')\n      }\n      let rand = Math.floor(Math.random() * data.length)\n      while (usedIdeas.includes(rand)) {\n        rand = Math.floor(Math.random() * data.length)\n      }\n      const selectedItem = data[rand]\n      usedIdeas.push(rand)\n      setIdeaData({\n        name: selectedItem[\"name\"],\n        image: selectedItem[\"image\"],\n        link: selectedItem[\"link\"]\n      })\n    }, 1500)\n\n  }\n\n  const handleLoading = (event) => {\n    setLoading(false)\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <main className=\"ideas-main ideas-main-start\">\n            <GivenIdea\n              name={ideaData.name}\n              image={ideaData.image}\n              link={ideaData.link}\n              status={ideaStatus}\n              loadFunc={handleLoading}\n              loadStatus={loading} />\n            <TapButton\n              status={ideaStatus}\n              func={handleTapButton}\n            />\n          </main>\n          <footer className=\"ideas-footer\">\n            <Link to=\"/about\">about</Link>\n          </footer>\n        </Route>\n        <Route exact path=\"/about\">\n          <AboutPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Ideas;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'modern-normalize/modern-normalize.css'\nimport './assets/index.css'\nimport Ideas from './Ideas'\n\nReactDOM.render(<Ideas />,document.getElementById('root'))"],"sourceRoot":""}